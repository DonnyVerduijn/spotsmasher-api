version: "3.3"

services:
  db:
    container_name: db
    build: ./db    
    restart: always
    ports:
      - "5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
  db-runner:
    container_name: db-runner
    build: ./db-runner
    ports:
      - "8080"
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    depends_on:
      - "db"
    restart: "no"
  api:
    container_name: api
    tty: true
    build:
      context: ./
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - "db"
    environment:
      NODE_ENV: ${NODE_ENV}
      API_PORT: ${API_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      IPSTACK_API_KEY: ${IPSTACK_API_KEY}  
  adminer:
    container_name: adminer
    image: adminer
    depends_on:
      - "db"
    ports:
      - "5000:8080"
networks:
  default:
    external:
      name: spotsmasher
volumes:
  node_modules: